version: '2'
volumes:
    crawler: {}
    etc_letsencrypt: {}
    git: {}
    log: {}
    sql: {}
    uploads: {}
    www: {}

services:
    web:
      extends:
        service: webserver
        file: docker/api-production.yml
      volumes:
       - uploads:/uploads
      command: ["/venv/api/bin/gunicorn", "-c", "/api/etc/gunicorn.pro.conf", "wsgi:app"]

    cache:
      extends:
        service: webserver
        file: docker/api-production.yml
      command: ["/api/cache"]

    scheduler:
      extends:
        service: webserver
        file: docker/api-production.yml
      command: ["/venv/api/bin/python", "scheduler.py"]

    app:
      image: rebase/client
      volumes:
       - ../react-app:/code
       - www:/www
      extends:
        service: common_env
        file: docker/api-production.yml
      command: ["/code/init", "app"]

    code2resume:
      image: rebase/client
      volumes:
       - ../react-app:/code
       - www:/www
      extends:
        service: common_env
        file: docker/api-production.yml
      command: ["/code/init", "code2resume"]

    rq_git:
      extends:
        service: webserver
        file: docker/api-production.yml
      image: rebase/rq_git
      ports:
       - "22:22"
      volumes:
       - git:/git

    rq_default:
      extends:
        service: webserver
        file: docker/api-production.yml
      image: rebase/rq_default
      volumes:
       - crawler:/crawler
      tmpfs:
       - /repos:rw,noexec,size=512m

    rq_dashboard:
        image: rebase/rq_dashboard
        ports:
         - "4444:4444"

    nginx:
        image: rebase/nginx
        ports:
         - 80:80
         - 443:443
        volumes:
         - etc_letsencrypt:/etc/letsencrypt
         - www:/www:ro

    redis:
      image: redis
      restart: always

    database:
      image: postgres
      environment:
        PGDATA: "/var/lib/postgresql/data/rebase"
      volumes:
       - sql:/var/lib/postgresql/data/rebase

    rsyslog:
      image: rebase/rsyslog
      volumes:
       - log:/var/log

    crawler:
      extends:
        service: webserver
        file: docker/api-production.yml
      image: rebase/rq_default
      command: ["/venv/rq/bin/python", "crawler.py"]

    jupyter:
      extends:
        service: webserver
        file: docker/api-dev.yml
      image: rebase/jupyter
      ports:
       - "8888:8888"
      volumes_from:
       - rq_default

