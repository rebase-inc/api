version: '2'
volumes:
    log: {}
    sql: {}
    
services:

    web:
      image: rebase/pro-web
      extends:
        service: common_env_pro
        file: common-python-service-environment.pro.yml
      environment:
        SETTINGS: ".web.pro"
        GITHUB_APP_ID:
        GITHUB_APP_SECRET:
        GITHUB_CODE2RESUME_ID:
        GITHUB_CODE2RESUME_SECRET:

    javascript:
        image: rebase/javascript

    parser:
        image: rebase/pro-parser

    impact_python:
        image: rebase/pro-impact-python
    
    impact_javascript:
        image: rebase/pro-impact-javascript

    rq_default:
      image: rebase/pro-rq-default
      extends:
        service: common_env_pro
        file: common-python-service-environment.pro.yml
      environment:
        SETTINGS: ".rq_default.pro"
        CRAWLER_USERNAME:
        CRAWLER_PASSWORD:
        GITHUB_APP_ID:
        GITHUB_APP_SECRET:
        GITHUB_CODE2RESUME_ID:
        GITHUB_CODE2RESUME_SECRET:
        # make sure the following number matches the tmpfs size
        REPOS_VOLUME_SIZE_IN_MB: 500
        # if REPOS_VOLUME_SIZE_IN_MB is less than 10MB, factor should be 10
        # if REPOS_VOLUME_SIZE_IN_MB is less than 100MB, factor should be 3
        # if REPOS_VOLUME_SIZE_IN_MB is less than 1000MB, factor should be 2
        CLONE_SIZE_SAFETY_FACTOR: 2
      tmpfs:
       - /repos:rw,noexec,size=500m

    rq_population:
      image: rebase/pro-rq-population
      extends:
        service: common_env_pro
        file: common-python-service-environment.pro.yml
      environment:
        SETTINGS: ".population.pro"

    jupyter:
      image: rebase/jupyter
      extends:
        service: common_env_pro
        file: common-python-service-environment.pro.yml
      ports:
       - "8888:8888"

    rq_dashboard:
        image: rebase/rq_dashboard
        ports:
         - "4444:4444"

    nginx:
        image: rebase/local-pro-nginx
        ports:
            - 3001:3001

    redis:
      image: redis
      restart: always

    database:
      image: postgres
      environment:
        PGDATA: "/var/lib/postgresql/data/rebase"
      volumes:
       - sql:/var/lib/postgresql/data/rebase

    rsyslog:
      image: rebase/rsyslog
      volumes:
       - log:/var/log

