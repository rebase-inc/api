. env/docker_utils
_vm

# #
# Search recursively for pattern in python files located in rebase/.
# $ py register_route
#
py () {
	grep -rn --include \*.py --exclude \*.pyc --exclude \*.swp --color=auto "$1" rebase
}


export REBASE_HOST_PRO=http://rebase-pro.herokuapp.com
export REBASE_HOST_STAGE=http://rebase-stage.herokuapp.com
export REBASE_HOST_LOCALHOST=http://127.0.0.1:5000
export REBASE_HOST_DOCKER="http://$(docker-machine ip default):3000"
export REBASE_HOST=$REBASE_HOST_DOCKER

stage () {
	export REBASE_HOST=$REBASE_HOST_STAGE
}

pro () {
	export REBASE_HOST=$REBASE_HOST_PRO
}

lh () {
	export REBASE_HOST=$REBASE_HOST_LOCALHOST
}

export REBASE_COOKIE_JAR=/tmp/rebase-cookie-jar.txt

rebase-curl () {
	curl \
    -s \
	-L \
	-b $REBASE_COOKIE_JAR \
	-c $REBASE_COOKIE_JAR \
	-H "Content-Type: application/json" \
	-X $1 \
	-d "$2" \
	 $REBASE_HOST/api/v1/$3
}

#
## GET something from Rebase
# $ rebase-get skill_sets
#
rebase-get () {
	rebase-curl GET "{}" $1 | jq .
}


#
# DELETE from Rebase
#  rebase-rm users/3
#
rebase-rm () {
    rebase-curl DELETE "" $1
}

#
# POST to rebase
# e.g.:
# rebase-post "{\"first_name\": \"$1\", \"last_name\":\"$2\", \"email\":\"$3\", \"password\":\"$4\"}" users
#
rebase-post () {
	curl \
    -s \
	-L \
	-b $REBASE_COOKIE_JAR \
	-c $REBASE_COOKIE_JAR \
	-H "Content-Type: application/json" \
    -H 'Accept: application/json' \
	-X POST \
	--data-binary "$1" \
	 $REBASE_HOST/api/v1/$2
}

#
# PUT to rebase
# e.g.:
# rebase-put "{\"first_name\": \"$1\", \"last_name\":\"$2\", \"email\":\"$3\", \"password\":\"$4\"}" users
#
rebase-put () {
	rebase-curl PUT "$1" $2
}

#
# Create user in Rebase
# $ rebase-new-user Joe Blow joe@blow.org foobar
#
rebase-new-user () {
	rebase-post \
	"{\"first_name\": \"$1\", \"last_name\":\"$2\", \"email\":\"$3\", \"password\":\"$4\"}" \
	users
}

rebase-login-raw () {
	rebase-post \
        "{ \"user\": {\"email\": \"$1\"}, \"password\": \"$2\"}" \
        auth
}

#
# Login to Rebase
# $ rebase-login you@mail.com password
# 
rebase-login () {
	export CURRENT_USER=$(rebase-post "{ \"user\": {\"email\": \"$1\"}, \"password\": \"$2\"}" auth | jq -c '.user') 
    echo $CURRENT_USER | jq .
}

#
## Logout from Rebase
## $ rebase-logout
##
rebase-logout () {
	rebase-get auth
    export CURRENT_USER=
	echo
	echo "Goodbye!"
}

#
# Set the current role for the current user
# $ rebase-role <user-id> <role-id>
# 
rebase-role () {
	rebase-put \
	"{ \"current_role\": { \"id\": \"$2\"} }" \
	users/$1
}

#
# Create a new SSH public key
# 
# example: rebase-key "My public key" "$(cat ~/.ssh/id_rsa.pub)"
#
rebase-key () {
    rebase-post \
    "{ \"user\": $CURRENT_USER, \"title\": \"$1\", \"key\": \"$2\" }" \
    ssh_keys
}

rebase-ticket-comment() {
    rebase-post \
    "{ \"user\": $CURRENT_USER, \"content\": \"yo mama so big\", \"ticket\": { \"id\": $1 } }" \
    comments
}

extract_session () {
	awk "/$1.*session/ { printf(\"%s=%s\", \$6, \$7) }" $REBASE_COOKIE_JAR
}
extract_remember () {
	awk "/$1.*remember_token/ { printf(\"%s=%s\", \$6, \$7) }" $REBASE_COOKIE_JAR
}

abc () {
	if [ $REBASE_HOST = $REBASE_HOST_PRO ]; then
		export host_regex=heroku
	else
		export host_regex="127.0.0.1"
	fi
	session=$(extract_session "$host_regex")
	remember=$(extract_remember "$host_regex")
	cookies="$remember; $session" 
	ab -C "$cookies" $*
}

genkey () {
	python3 -c "
from string import ascii_lowercase
from os import urandom
key = ''.join(map(lambda char: ascii_lowercase[char % (len(ascii_lowercase)-1)], urandom(1024)))
print(key)
"
}

delete_test_dbs () {
	psql -l | awk '/rebase_test_/ { print $1}' | xargs -I {} dropdb {}
}
