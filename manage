#!/usr/bin/env python

from glob import glob
from importlib import import_module
from os.path import basename, isfile, splitext

from flask.ext.script import Manager, Command
from flask.ext.migrate import Migrate, MigrateCommand

from inflection import underscore

from rebase import create_app
import rebase.models

app, _, db = create_app()
migrate = Migrate(app, db)
manager = Manager(app)

manager.add_command('db', MigrateCommand)

for entry in glob('parsers/*.py'):
    if isfile(entry) and not basename(entry).startswith('__'):
        name = 'parsers.'+splitext(basename(entry))[0]
        module = import_module(name)
        for attribute in dir(module):
            command = getattr(module, attribute)
            try:
                if not issubclass(command, Command) or command == Command:
                    continue
            except TypeError as e:
                if not isinstance(command, Manager):
                    continue
            manager.add_command(underscore(attribute), command)

@manager.shell
def make_shell_context():
    return dict(app=app, db=db, models=rebase.models)

if __name__ == '__main__':
    manager.run()
